# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

########################
#
# GLX Backend Settings
#
########################

# Avoid using stencil buffer, useful if you don’t have a stencil buffer.
# Might cause incorrect opacity when rendering transparent content (but never practically
# happened) and may not work with --blur-background. Tests show a 15% performance boost.
# Recommended.
glx-no-stencil = true;

# Copy unmodified regions from front buffer instead of redrawing them all.
# Tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# Tests on nouveau show terrible slowdown.
# Useful with --glx-swap-method, as well.
glx-copy-from-front = false;

# Use MESA_copy_sub_buffer to do partial screen update.
# Tests on nouveau shows a 200% performance boost when only 1/4 of the screen is updated.
# May break VSync and is not available on some drivers.
# Overrides --glx-copy-from-front.
glx-use-copysubbuffermesa = false;

# Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
glx-no-rebind-pixmap = true;

# GLX buffer swap method we assume.
# Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1).
# undefined is the slowest and the safest, and the default value.
# copy is fastest, but may fail on some drivers,
# 2-6 are gradually slower but safer (6 is still faster than 0).
# Usually, double buffer means 2, triple buffer means 3.
# buffer-age means auto-detect using GLX_EXT_buffer_age, supported by some drivers.
# Useless with --glx-use-copysubbuffermesa.
# Partially breaks --resize-damage.
# Defaults to undefined.
glx-swap-method = "undefined";

########################
#
# VSync
#
########################

# Set VSync method. VSync methods currently available:
# none: No VSync
#
# drm: VSync with DRM_IOCTL_WAIT_VBLANK.
#      May only work on some drivers.
#
# opengl: Try to VSync with SGI_video_sync OpenGL extension.
#         Only work on some drivers.
#
# opengl-oml: Try to VSync with OML_sync_control OpenGL extension.
#             Only work on some drivers.
#
# opengl-swc: Try to VSync with SGI_swap_control OpenGL extension.
#             Only work on some drivers. Works only with GLX backend.
#             Known to be most effective on many drivers. Does not actually control
#             paint timing, only buffer swap is affected, so it doesn’t have the
#             effect of --sw-opti unlike other methods.
#             Experimental.
#
# opengl-mswc: Try to VSync with MESA_swap_control OpenGL extension. Basically the
#              same as opengl-swc above, except the extension we use.
#
# (Note some VSync methods may not be enabled at compile time.)
vsync = "opengl-mswc";

########################
#
# Shadows
#
########################

# Control client-side shadows on windows.
shadow = false;

# Don't draw shadows on DND windows.
# no-dnd-shadow = true;

# Avoid drawing shadows on dock/panel windows.
# no-dock-shadow = true;

# Zero the part of the shadow's mask behind the window. Fix some weirdness with ARGB windows.
# clear-shadow = true;

# The blur radius for shadows. (default 12)
# shadow-radius = 10;

# The left offset for shadows. (default -15)
# shadow-offset-x = -5;

# The top offset for shadows. (default -15)
# shadow-offset-y = 0;

# The translucency for shadows. (default .75)
# shadow-opacity = 0.8;

# Set shadow colors
# shadow-red = 0.11;
# shadow-green = 0.12;
# shadow-blue = 0.13;

# The shadow exclude options are helpful if you have shadows enabled. Due to the
# way compton draws its shadows, certain applications will have visual glitches
# (most applications are fine, only apps that do weird things with xshapes or argb
# are affected).
# shadow-exclude = [
#   "name = 'Notification'",
#   "_GTK_FRAME_EXTENTS@:c",
#   "class_g = 'i3-frame'",
#   "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
#   "_NET_WM_STATE@:32a *= '_NET_WM_STATE_STICKY'",
#   "!I3_FLOATING_WINDOW@:c"
# ];

# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
# shadow-ignore-shaped = true;

########################
#
# Opacity & Blur
#
########################

# X Render backend: Step for pregenerating alpha pictures. (0.01 - 1.0, defaults to 0.03)
alpha-step = 0.06;

# Detect _NET_WM_OPACITY on client windows, useful for window managers not passing _NET_WM_OPACITY of client windows to frame windows.
detect-client-opacity = true;

# Blur background of transparent windows. Bad performance with X Render backend.
# GLX backend is preferred.
blur-background = false;

# Blur background of opaque windows with transparent frames as well.
# blur-background-frame = true;

# Do not let blur radius adjust based on window opacity.
blur-background-fixed = true;

# Specify the blur convolution kernel, with the following format:
#
# WIDTH,HEIGHT,ELE1,ELE2,ELE3,ELE4,ELE5...
#
# The element in the center must not be included, it will be forever 1.0 or changing
# based on opacity, depending on whether you have --blur-background-fixed. Yet the
# automatic adjustment of blur factor may not work well with a custom blur kernel.
#
# A 7x7 Gaussian blur kernel (sigma = 0.84089642) looks like:
#
# --blur-kern '7,7,0.000003,0.000102,0.000849,0.001723,0.000849,0.000102,0.000003,0.000102,0.003494,0.029143,0.059106,0.029143,0.003494,0.000102,0.000849,0.029143,0.243117,0.493069,0.243117,0.029143,0.000849,0.001723,0.059106,0.493069,0.493069,0.059106,0.001723,0.000849,0.029143,0.243117,0.493069,0.243117,0.029143,0.000849,0.000102,0.003494,0.029143,0.059106,0.029143,0.003494,0.000102,0.000003,0.000102,0.000849,0.001723,0.000849,0.000102,0.000003'
#
# May also be one of the predefined kernels:
# * 3x3box (default)
# * 5x5box
# * 7x7box
# * 3x3gaussian
# * 5x5gaussian
# * 7x7gaussian
# * 9x9gaussian
# * 11x11gaussian.
#
# All Gaussian kernels are generated with sigma = 0.84089642 . You may use the
# accompanied compton-convgen.py to generate blur kernels.
blur-kern = "7x7box";

# Exclude conditions for background blur.
blur-background-exclude = [
  "class_g = 'i3-frame'",
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "_GTK_FRAME_EXTENTS@:c"
];

# Specify a list of opacity rules, in the format PERCENT:PATTERN, like 50:name *= "Firefox".
# compton-trans is recommended over this. Note we do not distinguish 100% and
# unset, and we don’t make any guarantee about possible conflicts with other
# programs that set _NET_WM_WINDOW_OPACITY on frame or client windows.
#
# Duplicating the _NET_WM_STATE entries because compton cannot deal with atom arrays :-/
opacity-rule = [
  "0:_NET_WM_STATE@[0]:32a = '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[1]:32a = '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[2]:32a = '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[3]:32a = '_NET_WM_STATE_HIDDEN'",
  "0:_NET_WM_STATE@[4]:32a = '_NET_WM_STATE_HIDDEN'",

  "90:_NET_WM_STATE@[0]:32a = '_NET_WM_STATE_STICKY'",
  "90:_NET_WM_STATE@[1]:32a = '_NET_WM_STATE_STICKY'",
  "90:_NET_WM_STATE@[2]:32a = '_NET_WM_STATE_STICKY'",
  "90:_NET_WM_STATE@[3]:32a = '_NET_WM_STATE_STICKY'",
  "90:_NET_WM_STATE@[4]:32a = '_NET_WM_STATE_STICKY'"
];

########################
#
# Fading
#
########################

# Fade windows during opacity changes.
fading = true;

# The time between steps in a fade in milliseconds. (default 10).
fade-delta = 1.5;

# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.028;

# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.028;

# Fade windows in/out when opening/closing
# no-fading-openclose = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [];

########################
#
# Others
#
########################

# Try to detect WM windows (a non-override-redirect window with no child that
# has WM_STATE) and mark them as active.
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn’t have a child window with WM_STATE focused.
mark-ovredir-focused = true;

# Use EWMH _NET_ACTIVE_WINDOW to determine currently focused window, rather than
# listening to FocusIn/FocusOut event. Might have more accuracy, provided that
# the WM supports it.
use-ewmh-active-win = true;

# Try to detect windows with rounded corners and don’t consider them shaped windows.
# The accuracy is not very high, unfortunately.
detect-rounded-corners = true;

# Specify refresh rate of the screen. If not specified or 0, compton will try
# detecting this with X RandR extension.
refresh-rate = 0;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate
# tearing. Reported to have no effect, though.
dbe = false;

# Unredirect all windows if a full-screen opaque window is detected, to maximize
# performance for full-screen windows. Known to cause flickering when un/redirecting
# windows.  --paint-on-overlay may make the flickering less obvious.
unredir-if-possible = false;

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group
# focused at the same time.
detect-transient = true;

# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group
# focused at the same time.  WM_TRANSIENT_FOR has higher priority if
# --detect-transient is enabled, too.
detect-client-leader = true;

# Specify a list of conditions of windows that should be painted with inverted color.
# Resource-hogging, and is not well tested.
invert-color-include = [];

# Window-type-specific settings are exposed only in configuration file and has
# the following format:
#
# wintypes:
# {
#   WINDOW_TYPE = { fade = BOOL; shadow = BOOL; opacity = FLOAT; focus = BOOL; };
# };
#
# WINDOW_TYPE is one of the 15 window types defined in EWMH standard:
# * unknown
# * desktop
# * dock
# * toolbar
# * menu
# * utility
# * splash
# * dialog
# * normal
# * dropdown_menu
# * popup_menu
# * tooltip
# * notify
# * combo
# * dnd
#
# "fade" and "shadow" controls window-type-specific shadow and fade settings.
# "opacity" controls default opacity of the window type. "focus" controls whether
# the window of this type is to be always considered focused. (By default, all
# window types except "normal" and "dialog" has this on.)
wintypes: {
    tooltip = { fade = true; shadow = true; opacity = 1.00; focus = true; };
    dock = { shadow = false };
    dnd = { shadow = false };
};
