#-*- sh -*- Emacs mode

if command -v aws > /dev/null; then
  complete -C "$(which aws_completer)" aws

  switch-aws-profile() {
    export AWS_PROFILE=$1
    if ! aws sts get-caller-identity > /dev/null; then
      aws sso login
    fi
  }

  _switch_aws_profile() {
    local cur=${COMP_WORDS[COMP_CWORD]}
    local profiles="$(awk "BEGIN { print \"default\"} /\[profile/ { sub(/]/, \"\", \$2); print \$2 }" ~/.aws/config)"

    COMPREPLY=( $( compgen -S ' ' -W "$profiles" -- $cur ) )

    return 0
  }

  complete -F _switch_aws_profile -o nospace switch-aws-profile

  get-instance-id-by-name() {
    aws ec2 describe-instances --query 'Reservations[0].Instances[0].InstanceId' --filter "Name=tag:Name,Values=$1" | tr -d '"'
  }

  ssm() {
    local target=$1; shift

    # If the target doesn't look like an instance ID, try looking it up
    if [[ "$target" != i-* ]]; then
      target="$(get-instance-id-by-name "$target")"
    fi

    aws ssm start-session --target="$target" "$@"
  }

  send-ssh-public-key() {
    local target=$1; shift
    local user=$1; shift

    # If the target doesn't look like an instance ID, try looking it up
    if [[ "$target" != i-* ]]; then
      target="$(get-instance-id-by-name "$target")"
    fi

    if [ ! -f /tmp/instance-connect.ed25519 ]; then
      ssh-keygen \
        -t ed25519 \
        -f '/tmp/instance-connect.ed25519' \
        -C 'Ephemeral Instance Connect Key' \
        -q -N ''
    fi

    aws ec2-instance-connect send-ssh-public-key \
        --instance-id "$target" \
        --instance-os-user "$user" \
        --ssh-public-key file:///tmp/instance-connect.ed25519.pub \
        "$@"
  }
fi
